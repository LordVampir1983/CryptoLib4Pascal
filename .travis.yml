# Part of `travis-lazarus` (https://github.com/nielsAD/travis-lazarus)
# License: MIT

language: generic
sudo: required
dist: trusty

os:
  - linux
  - osx

env:
  global:
    - WINEPREFIX=~/.winelaz
    - DISPLAY=:99.0
  matrix:
   # - LAZ_PKG=true  # Use the latest version from the default package manager
   # - LAZ_VER=1.6.4 # Use specific (binary) release
    - LAZ_VER=1.8.0
    - LAZ_VER=1.8.4

matrix:
  include:
   # - os: linux
   #   env: LAZ_VER=1.6.4  LAZ_ENV=wine WINEARCH=win32 LAZ_OPT="--os=win32 --cpu=i386"
    - os: linux
      env: LAZ_VER=1.8.0 LAZ_ENV=wine WINEARCH=win32 LAZ_OPT="--os=win32 --cpu=i386"
    - os: linux
      env: LAZ_VER=1.8.4 LAZ_ENV=wine WINEARCH=win32 LAZ_OPT="--os=win32 --cpu=i386"
   # - os: linux
   #   env: LAZ_VER=1.6.4  LAZ_ENV=wine WINEARCH=win64 LAZ_OPT="--os=win64 --cpu=x86_64"
    - os: linux
      env: LAZ_VER=1.8.0 LAZ_ENV=wine WINEARCH=win64 LAZ_OPT="--os=win64 --cpu=x86_64"
    - os: linux
      env: LAZ_VER=1.8.4 LAZ_ENV=wine WINEARCH=win64 LAZ_OPT="--os=win64 --cpu=x86_64"
   #- os: linux
   #   env: LAZ_VER=1.6.4  LAZ_ENV=qemu-arm LAZ_OPT="--os=linux --cpu=arm"
    - os: linux
      env: LAZ_VER=1.8.0 LAZ_ENV=qemu-arm LAZ_OPT="--os=linux --cpu=arm"
    - os: linux
      env: LAZ_VER=1.8.4 LAZ_ENV=qemu-arm LAZ_OPT="--os=linux --cpu=arm"

before_install:
  # Start virtual display server
  - Xvfb $DISPLAY &
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
          sudo apt-get update;
          sudo apt-get install binutils-2.26;
          sudo ln -sf /usr/lib/binutils-2.26/bin/* /usr/bin/;
          sudo ln -sf /usr/lib/binutils-2.26/ldscripts/* /usr/lib/ldscripts/;
    fi
  - chmod +x .travis.install.py 

install:
  # Install prerequisites (fpc/lazarus/wine/qemu)
  - ./.travis.install.py

script:
  - curl -L -k https://github.com/Xor-el/HashLib4Pascal/archive/master.zip -o HashLib4Pascal.zip
  - curl -L -k https://github.com/Xor-el/SimpleBaseLib4Pascal/archive/master.zip -o SimpleBaseLib4Pascal.zip
  - curl -L -k https://github.com/Xor-el/generics.collections/archive/master.zip -o generics.collections.zip
  - unzip HashLib4Pascal.zip
  - unzip SimpleBaseLib4Pascal.zip
  - unzip generics.collections.zip
  - lazbuild --add-package-link ./HashLib4Pascal-master/HashLib/src/Packages/FPC/HashLib4PascalPackage.lpk  # Add HashLib4Pascal Package
  - lazbuild --add-package-link ./SimpleBaseLib4Pascal-master/SimpleBaseLib/src/Packages/FPC/SimpleBaseLib4PascalPackage.lpk  # Add SimpleBaseLib4Pascal Package
  - lazbuild --add-package-link ./generics.collections-master/generics_collections.lpk  # Add generics.collections Package
  - lazbuild $LAZ_OPT ./HashLib4Pascal-master/HashLib/src/Packages/FPC/HashLib4PascalPackage.lpk  # Build HashLib4Pascal Package
  - lazbuild $LAZ_OPT ./SimpleBaseLib4Pascal-master/SimpleBaseLib/src/Packages/FPC/SimpleBaseLib4PascalPackage.lpk  # Build SimpleBaseLib4Pascal Package
  - lazbuild $LAZ_OPT ./generics.collections-master/generics_collections.lpk  # Build generics.collections Package
  - lazbuild $LAZ_OPT ./CryptoLib/src/Packages/FPC/CryptoLib4PascalPackage.lpk  # Build CryptoLib4Pascal Package
  - lazbuild $LAZ_OPT ./CryptoLib.Tests/FreePascal.Tests/CryptoLibConsole.Tests.lpi  # Build CryptoLib4Pascal Test Project
  - travis_wait 120 $LAZ_ENV ./CryptoLib.Tests/FreePascal.Tests/bin/CryptoLib --format=plain --suite=TTestSecureRandom --progress  # Run TTestSecureRandom TestSuite with timeout of 120 mins
 # - travis_wait 120 $LAZ_ENV ./CryptoLib.Tests/FreePascal.Tests/bin/CryptoLib --all --format=plain --progress # Run CryptoLib4Pascal TestSuite with timeout of 120 mins
 # - travis_wait 120 $LAZ_ENV ./CryptoLib.Tests/FreePascal.Tests/bin/CryptoLib --format=plain --suite=TTestMD5HMac --progress  # Run TTestMD5HMac TestSuite with timeout of 120 mins


notifications:
  email:
    on_success: false
    on_failure: change
